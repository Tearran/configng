#!/bin/bash

# initializes the terminal from TERM if stdin is a terminal
unset UXMODE
[[ -t 0 && "$1" =~ ^(|--cmd|--help)$ ]] && UXMODE="true" && tput init
# allows CTRL c to exit
trap "exit" INT TERM

[[ $EUID != 0 ]] && exec sudo "$0" "$@"

#
# Get the script directory
script_dir="$(dirname "$0")"

declare -A module_options

# Load the initialize modules
source "$script_dir/../lib/armbian-config/config.initialize.sh"

# Start loading messages
checkpoint reset
checkpoint debug "Initializing script"

[[ -d "$script_dir/../tools" ]] && tools_dir="$script_dir/../tools"
[[ ! -d "$script_dir/../lib" && -n "$tools_dir" ]] && die -e "Please run\nbash "$tools_dir/config-assemble.sh" to build the lib directory\n"

# 'whiptail' is a simple dialog box utility that works well with Bash. It doesn't have all the features of some other dialog box utilities, but it does everything we need for this script.
#[[ -x "$(command -v whiptail)" ]] && DIALOG="whiptail"

# Define the lib directory one level up from the script directory
lib_dir="$script_dir/../lib/armbian-config"
doc_dir="$script_dir/../share/doc/armbian-config"
#json_file="$lib_dir/config.jobs.json"

#
# Load The Bash procedure Objects
#json_data=$(<"$json_file")

# Load configng core functions and module options array
source "$lib_dir/config.framework.sh"
checkpoint debug "Loaded Framework..."
initialize_interface
interface_colors 0
checkpoint debug "Text User Interface $DIALOG..."
initialize_variables
checkpoint debug "initialize Systems variables..."
check_distro_status
source "$lib_dir/config.docs.sh"
checkpoint debug "Loaded Docs..."
source "$lib_dir/config.system.sh"
checkpoint debug "Loaded System helpers..."
source "$lib_dir/config.network.sh"
checkpoint debug "Loaded Network helpers..."
source "$lib_dir/config.software.sh"
checkpoint debug "Loaded Software helpers..."


checkpoint debug "DEBUG Messages on"

case "$1" in
    "--help")
        if [[ -n "$2" ]]; then
            fn=$(sanitize "$2") || die
            shift 2
            "$fn" "help"
        else
            echo "Usage:  armbian-config --[option]
  Options:
     --help [module_name]   Use [module_name] to filter specific menu options.
     --api  [option]     Run a command (advanced)

"
        fi
    ;;

    "--api")
        checkpoint debug "Starting --api call"
        case "$2" in
            ""|"help")
                _api_list
            ;;
            *)
                fn=$(sanitize "$2") || die
                shift 2
                "$fn" "$@"
                checkpoint debug "Finished --api call"
            ;;
        esac
    ;;

    *)
        # Generate the top menu with the modified Object data
        initialize_interface 4
        checkpoint debug "Launching TUI"
        interface_menu interface_categories
        checkpoint debug "Exited TUI"
        # Show about this tool on exit
        about_armbian_configng 
    ;;
esac

checkpoint total
